{
    "swagger": "2.0",
    "info": {
        "contact": {},
        "license": {}
    },
    "paths": {
        "/coin": {
            "get": {
                "description": "Return all the coin on the pool of avalable coins",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coin"
                ],
                "summary": "Index coin",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Coin"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.DefaultError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a Coin in the pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coin"
                ],
                "summary": "Index coin",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Coin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Coin"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.DefaultError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Coin in the pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coin"
                ],
                "summary": "Index coin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request symbol",
                        "name": "Request",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Coin"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.DefaultError"
                        }
                    }
                }
            }
        },
        "/price-conversion": {
            "get": {
                "description": "Convert an amount of one cryptocurrency or fiat currency into one or more different currencies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversor"
                ],
                "summary": "Index Conversor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request from",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request to",
                        "name": "to",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Request amount",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CoinExchange"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.DefaultError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Coin": {
            "type": "object",
            "properties": {
                "symbol": {
                    "type": "string"
                }
            }
        },
        "models.CoinExchange": {
            "type": "object",
            "properties": {
                "AmountConveted": {
                    "type": "number"
                },
                "amount": {
                    "type": "number"
                },
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "models.DefaultError": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}